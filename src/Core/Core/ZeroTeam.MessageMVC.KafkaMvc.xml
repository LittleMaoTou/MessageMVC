<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZeroTeam.MessageMVC</name>
    </assembly>
    <members>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.AddInImporter">
            <summary>
            MEF插件导入器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.Instance">
            <summary>
            实例对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.Registers">
            <summary>
            插件对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.Import">
            <summary>
            导入
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AddInImporter.AutoRegist">
            <summary>
            执行自动注册
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover">
            <summary>
            ZeroStation发现工具
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.Assembly">
            <summary>
            主调用程序集
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.StationName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.StationInfo">
            <summary>
            站点文档信息
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover._defStation">
            <summary>
            缺省站点
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.FindApies(System.Type)">
            <summary>
            查找API
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.FindApies">
            <summary>
            查找API
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.FindApi(System.Type,System.Boolean)">
            <summary>
            查找API
            </summary>
            <param name="type"></param>
            <param name="onlyDoc"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.CreateFunc(System.Reflection.TypeInfo,System.String,System.Reflection.TypeInfo,System.Reflection.TypeInfo)">
            <summary>生成动态匿名调用内部方法（参数由TArg转为实际类型后调用，并将调用返回值转为TRes）</summary>
            <param name="callInfo">调用对象类型</param>
            <param name="argInfo">原始参数类型</param>
            <param name="resInfo">原始返回值类型</param>
            <param name="methodName">原始调用方法</param>
            <returns>匿名委托</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.CreateFunc``2(System.Reflection.TypeInfo,System.String,System.Reflection.TypeInfo,System.Reflection.TypeInfo)">
            <summary>生成动态匿名调用内部方法（参数由TArg转为实际类型后调用，并将调用返回值转为TRes）</summary>
            <typeparam name="TArg">参数类型（接口）</typeparam>
            <typeparam name="TRes">返回值类型（接口）</typeparam>
            <param name="callInfo">调用对象类型</param>
            <param name="argInfo">原始参数类型</param>
            <param name="resInfo">原始返回值类型</param>
            <param name="methodName">原始调用方法</param>
            <returns>匿名委托</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.CreateFunc``1(System.Reflection.TypeInfo,System.String,System.Reflection.TypeInfo)">
            <summary>生成动态匿名调用内部方法（无参，调用返回值转为TRes）</summary>
            <typeparam name="TRes">返回值类型（接口）</typeparam>
            <param name="callInfo">调用对象类型</param>
            <param name="resInfo">原始返回值类型</param>
            <param name="methodName">原始调用方法</param>
            <returns>匿名委托</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.CreateStringFunc(System.Reflection.TypeInfo,System.String)">
            <summary>生成动态匿名调用内部方法（无参，调用返回值转为TRes）</summary>
            <param name="callInfo">调用对象类型</param>
            <param name="methodName">原始调用方法</param>
            <returns>匿名委托</returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ZeroDiscover.CreateFunc(System.Reflection.TypeInfo,System.String,System.Reflection.TypeInfo)">
            <summary>生成动态匿名调用内部方法（无参，调用返回值转为TRes）</summary>
            <param name="callInfo">调用对象类型</param>
            <param name="resInfo">原始返回值类型</param>
            <param name="methodName">原始调用方法</param>
            <returns>匿名委托</returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem">
            <summary>
            Api调用节点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Handlers">
            <summary>
            全局ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.LocalId">
            <summary>
            站点请求ID(队列使用)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.GlobalId">
            <summary>
            全局ID(本次)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.CallId">
            <summary>
            全局ID(调用方)
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Context">
            <summary>
             原始上下文的JSO内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Command">
            <summary>
             调用的命令或广播子标题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.ApiName">
            <summary>
             调用的命令或广播子标题
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Requester">
            <summary>
             请求者
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Station">
            <summary>
             站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Argument">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Extend">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Result">
            <summary>
            返回
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.Status">
            <summary>
            执行状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.RestoryContext(System.String)">
            <summary>
            还原调用上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiCallItem.ToString">
            <summary>
            显示到文本
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter">
            <summary>
                Api调用器
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Station">
            <summary>
            当前站点
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Item">
            <summary>
            调用的内容
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.CancellationToken">
            <summary>
            取消停牌
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.ScopeResource">
            <summary>
            范围资源
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.OnMessagePush(ZeroTeam.MessageMVC.ZeroStation,System.String)">
            <summary>
            消息处理
            </summary>
            <param name="station"></param>
            <param name="message"></param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.Execute">
            <summary>
            调用 
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.RestoryContext">
            <summary>
            还原调用上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.CommandPrepare(System.Boolean,ZeroTeam.MessageMVC.ZeroApis.ApiAction@)">
            <summary>
                执行命令
            </summary>
            <param name="monitor"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.CommandExec(System.Boolean,ZeroTeam.MessageMVC.ZeroApis.ApiAction)">
            <summary>
                执行命令
            </summary>
            <param name="monitor"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiExecuter.CheckCommandResult(System.Object)">
            <summary>
                执行命令
            </summary>
            <param name="res"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.IApiHandler">
            <summary>
            Api处理器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiHandler.Prepare(ZeroTeam.MessageMVC.ZeroStation,ZeroTeam.MessageMVC.ZeroApis.ApiCallItem)">
            <summary>
            准备
            </summary>
            <param name="station"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.IApiHandler.End(ZeroTeam.MessageMVC.ZeroStation,ZeroTeam.MessageMVC.ZeroApis.ApiCallItem)">
            <summary>
            结束处理
            </summary>
            <param name="station"></param>
            <param name="item"></param>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiControllerBase">
            <summary>
            ZeroApi控制器基类
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiControllerBase.UserInfo">
            <summary>
            当前登录用户
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiControllerBase.Caller">
            <summary>
            调用者（机器名）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiControllerBase.RequestId">
            <summary>
            调用标识
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiControllerBase.UserAgent">
            <summary>
            HTTP调用时的UserAgent
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiControllerBase.ApiCallItem">
            <summary>
            原始调用帧消息
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ActionController">
            <summary>
            ZeroApi控制器基类
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiController">
            <summary>
            ZeroApi控制器基类
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.QueueController">
            <summary>
            ZeroQueu控制器基类
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ZeroApiController">
            <summary>
            ZeroApi控制器基类
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAction">
            <summary>
                Api站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Name">
            <summary>
                Api名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Access">
            <summary>
                访问控制
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.NeedLogin">
            <summary>
                需要登录
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.IsPublic">
            <summary>
                是否公开接口
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ArgumenType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction.ResultType">
            <summary>
                参数类型
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj2">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj2.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj2.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj2.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj2.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj2.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAction`1">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction`1.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction`1.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction`1.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction`1.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction`1.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction`1">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction`1.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction`1.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction`1.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction`1.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction`1.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction2`1">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction2`1._argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction2`1.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction2`1.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction2`1.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction2`1.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiTaskAction2`1.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`1">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`1.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`1.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`1.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`1.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`1.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiDelegate1">
            <summary>
                API标准委托
            </summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiDelegate">
            <summary>
                API标准委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.AnyApiAction`1">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.AnyApiAction`1._argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.AnyApiAction`1.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.AnyApiAction`1.Method">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AnyApiAction`1.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AnyApiAction`1.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.AnyApiAction`1.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAction`2">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction`2.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAction`2._argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction`2.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction`2.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction`2.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction`2.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`2">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`2.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`2._argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`2.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`2.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`2.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiAction2`2.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj">
            <summary>
                Api动作
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj.Argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj._argument">
            <summary>
                参数
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj.Action">
            <summary>
                执行行为
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj.RestoreArgument(System.String)">
            <summary>
                还原参数
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj.Execute">
            <summary>
                执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApis.ApiActionObj.Validate(System.String@)">
            <summary>
                参数校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ZeroTeam.MessageMVC.SpeedLimitType">
            <summary>
            限速模式（0 按线程数限制 1 按等待数限制）
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.SpeedLimitType.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.SpeedLimitType.Single">
            <summary>
            单线程数处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.SpeedLimitType.ThreadCount">
            <summary>
            按线程数限制
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.SpeedLimitType.WaitCount">
            <summary>
            按等待数限制
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroApplication">
            <summary>
                站点应用
            </summary>
            <summary>
                站点应用
            </summary>
            <summary>
                站点应用
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.AppName">
            <summary>
                当前应用名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.Config">
            <summary>
                站点配置
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.CheckConfig">
            <summary>
                配置校验
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication._appState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.ApplicationState">
            <summary>
                状态
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.SetFailed">
            <summary>
            设置ZeroCenter与Application状态都为Failed
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.ApplicationIsRun">
            <summary>
                本地应用是否正在运行
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.CanDo">
            <summary>
                运行状态（本地与服务器均正常）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.IsAlive">
            <summary>
                运行状态（本地未关闭）
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.IsDisposed">
            <summary>
                已关闭
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroApplication.IsClosed">
            <summary>
                已关闭
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.CheckOption">
            <summary>
                配置校验,作为第一步
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.InitializeDependency">
            <summary>
                设置LogRecorder的依赖属性(内部使用)
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.Discove(System.Reflection.Assembly,System.String)">
            <summary>
                发现
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.Run">
            <summary>
                运行
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.RunAsync">
            <summary>
                运行
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.RunAwaite">
            <summary>
                执行并等待
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.RunAwaiteAsync">
            <summary>
                执行并等待
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication.WaitToken">
            <summary>
                应用程序等待结果的信号量对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.Start">
            <summary>
                启动
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.Shutdown">
            <summary>
                关闭
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication.ZeroObjects">
            <summary>
            已注册的对象
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication.ActiveObjects">
            <summary>
            活动对象(执行中)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication.FailedObjects">
            <summary>
            活动对象(执行中)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication.GlobalObjects">
            <summary>
            全局执行对象(内部的Task)
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication.ActiveSemaphore">
            <summary>
                对象活动状态记录器锁定
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroApplication.GlobalSemaphore">
            <summary>
                对象活动状态记录器锁定
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnGlobalStart(ZeroTeam.MessageMVC.IZeroObject)">
            <summary>
                对象活动时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnGlobalEnd(ZeroTeam.MessageMVC.IZeroObject)">
            <summary>
                对象活动时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnObjectActive(ZeroTeam.MessageMVC.IZeroObject)">
            <summary>
                对象活动时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnObjectFailed(ZeroTeam.MessageMVC.IZeroObject)">
            <summary>
                对象关闭时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnObjectClose(ZeroTeam.MessageMVC.IZeroObject)">
            <summary>
                对象关闭时登记
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.WaitAllObjectSafeClose">
            <summary>
                等待所有对象信号(全开或全关)
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.TryGetZeroObject(System.String)">
            <summary>
                取已注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.RegistZeroObject(ZeroTeam.MessageMVC.IZeroObject)">
            <summary>
                注册对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnZeroInitialize">
            <summary>
                系统启动时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnZeroStart">
            <summary>
                系统启动时调用
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroApplication.OnZeroDestory">
            <summary>
                注销时调用
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroServices.StateMachine.EmptyStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.EmptyStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroServices.StateMachine.CloseStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.CloseStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroServices.StateMachine.FailedStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.FailedStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.FailedStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.FailedStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroServices.StateMachine.IStationStateMachine">
            <summary>
            站点状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroServices.StateMachine.IStationStateMachine.Station">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroServices.StateMachine.IStationStateMachine.IsDisposed">
            <summary>
            是否已析构
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.IStationStateMachine.Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.IStationStateMachine.Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.IStationStateMachine.End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroServices.StateMachine.RunStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.RunStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.RunStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Close">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.RunStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroServices.StateMachine.StartStateMachine">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.StartStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Start">
            <summary>
                开始的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.StartStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#Close">
            <summary>
                关闭的处理
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroServices.StateMachine.StartStateMachine.ZeroTeam#MessageMVC#ZeroServices#StateMachine#IStationStateMachine#End">
            <summary>
                结束的处理
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroServices.StateMachine.StationStateMachineBase">
            <summary>
            监控状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroServices.StateMachine.StationStateMachineBase.Station">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroServices.StateMachine.StationStateMachineBase.IsDisposed">
            <summary>
            是否已析构
            </summary>
        </member>
        <member name="T:ZeroTeam.MessageMVC.ZeroStation">
            <summary>
            站点
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.#ctor(ZeroTeam.MessageMVC.ZeroStationType)">
            <summary>
            构造
            </summary>
            <param name="type">站点类型</param>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.NetPool">
            <summary>
            网络传输对象
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.NetPoolBuilder">
            <summary>
            网络传输对象构造器
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.StationType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.StationName">
            <summary>
            站点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.Name">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.RealName">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation.CallCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation.ErrorCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation.SuccessCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation.RecvCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation.SendCount">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation.SendError">
            <summary>
            调用计数
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation._realState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.RealState">
            <summary>
                运行状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.StateMachine">
            <summary>
            状态机
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.ConfigState">
            <summary>
                配置状态
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.CancelToken">
            <summary>
            取消标记
            </summary>
        </member>
        <member name="P:ZeroTeam.MessageMVC.ZeroStation.CanLoop">
            <summary>
            能不能循环处理
            </summary>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation._waitToken">
            <summary>
            应用程序等待结果的信号量对象
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.Start">
            <summary>
            开始
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.DoStart">
            <summary>
            开始
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.Run">
            <summary>
            命令轮询
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.Close">
            <summary>
            关闭
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.LoopBegin">
            <summary>
            同步运行状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.LoopComplete">
            <summary>
            同步关闭状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.OnLoopIdle">
            <summary>
            空转
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.DoDispose">
            <summary>
            析构
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.DoDestory">
            <summary>
            析构
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction(System.String,ZeroTeam.MessageMVC.ZeroApis.ApiAction,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction(System.String,System.Func{System.Threading.Tasks.Task{Agebull.MicroZero.ZeroApis.IApiResult}},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="info">反射信息</param>
            <param name="access">访问设置</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction(System.String,System.Func{System.Object,System.Threading.Tasks.Task{Agebull.MicroZero.ZeroApis.IApiResult}},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="info">反射信息</param>
            <param name="access">访问设置</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction(System.String,System.Func{Agebull.MicroZero.ZeroApis.IApiResult},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="info">反射信息</param>
            <param name="access">访问设置</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction(System.String,System.Func{System.Object,System.Object},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="access">访问设置</param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction(System.String,System.Func{System.Object},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="access">访问设置</param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction``1(System.String,System.Func{``0},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="access">访问设置</param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction2``1(System.String,System.Func{``0},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="access">访问设置</param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction2``2(System.String,System.Func{``0,``1},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="access">访问设置</param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction(System.String,System.Func{Agebull.MicroZero.ZeroApis.IApiArgument,Agebull.MicroZero.ZeroApis.IApiResult},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="access">访问设置</param>
            <param name="info">反射信息</param>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistAction``2(System.String,System.Func{``0,``1},Agebull.MicroZero.ApiAccessOption,Agebull.MicroZero.ApiDocuments.ApiActionInfo)">
            <summary>
                注册方法
            </summary>
            <param name="name">方法外部方法名称，如 v1/auto/getdid </param>
            <param name="action">动作</param>
            <param name="access">访问设置</param>
            <param name="info">反射信息</param>
        </member>
        <member name="F:ZeroTeam.MessageMVC.ZeroStation.ApiHandlers">
            <summary>
            处理器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.RegistHandlers``1">
            <summary>
                注册处理器
            </summary>
        </member>
        <member name="M:ZeroTeam.MessageMVC.ZeroStation.CreateHandlers">
            <summary>
                注册处理器
            </summary>
        </member>
    </members>
</doc>
